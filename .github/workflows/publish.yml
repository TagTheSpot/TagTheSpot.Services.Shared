name: Publish NuGet Packages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Find changed projects
        id: changed
        run: |
          CHANGED_PROJECTS=""
          for proj in $(find . -name "TagTheSpot.Services.Shared.*.csproj"); do
            if git diff --quiet HEAD~1 HEAD -- "$proj"; then
              echo "No changes in $proj"
            else
              echo "Changed: $proj"
              CHANGED_PROJECTS="$CHANGED_PROJECTS $proj"
            fi
          done
          echo "projects=$CHANGED_PROJECTS" >> $GITHUB_OUTPUT

      - name: Pack changed libraries using .csproj version
        if: steps.changed.outputs.projects != ''
        run: |
          for proj in ${{ steps.changed.outputs.projects }}; do
            VERSION=$(xmllint --xpath "string(//Project/PropertyGroup/Version)" "$proj")
            echo "Packing $proj with version $VERSION"
            dotnet pack "$proj" --configuration Release --no-build -p:PackageVersion=$VERSION
          done

      - name: Push changed packages to NuGet
        if: steps.changed.outputs.projects != ''
        run: |
          for pkg in $(find . -name "*.nupkg"); do
            echo "Pushing $pkg"
            dotnet nuget push "$pkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
          done
