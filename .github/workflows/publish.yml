name: Publish NuGet Packages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Publish NuGet packages
        run: |
          set -e
          projects=$(find . -name "*.csproj")

          for project in $projects; do
            echo "Processing $project"

            version=$(grep -oPm1 "(?<=<Version>)[^<]+" "$project")
            packageId=$(grep -oPm1 "(?<=<PackageId>)[^<]+" "$project")

            if [ -z "$packageId" ] || [ -z "$version" ]; then
              echo "Skipping $project because PackageId or Version not found"
              continue
            fi

            echo "Checking if $packageId $version exists on NuGet..."
            if curl --silent --fail "https://api.nuget.org/v3-flatcontainer/${packageId,,}/${version}/${packageId,,}.nuspec" > /dev/null; then
              echo "$packageId $version already exists. Skipping."
              continue
            fi

            echo "Building $packageId..."
            dotnet build "$project" -c Release --no-restore

            echo "Packing $packageId $version..."
            dotnet pack "$project" -c Release --no-build -o ./nupkgs

            echo "Publishing $packageId $version..."
            dotnet nuget push "./nupkgs/$packageId.$version.nupkg" \
              --api-key ${{ secrets.NUGET_API_KEY }} \
              --source https://api.nuget.org/v3/index.json \
              --skip-duplicate
          done
