name: Publish NuGet Packages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Pack all shared libraries using csproj version
        run: |
          for proj in $(find . -name "TagTheSpot.Services.Shared.*.csproj"); do
            version=$(dotnet msbuild "$proj" -nologo -t:GetVersion -p:DesignTimeBuild=true /v:q 2>/dev/null || \
                      dotnet msbuild "$proj" -nologo -t:Evaluate -p:DesignTimeBuild=true -p:Property=Version /v:q)
            # fallback: get Version property
            version=$(dotnet msbuild "$proj" -nologo -t:Evaluate -p:Property=Version /v:q | grep -v "^\s*$")
            echo "Packing $proj with version $version"
            dotnet pack "$proj" --configuration Release --no-build -p:PackageVersion=$version
          done

      - name: Push all packages to NuGet
        run: |
          for pkg in $(find . -name "*.nupkg"); do
            echo "Pushing $pkg"
            dotnet nuget push "$pkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
          done
